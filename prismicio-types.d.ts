// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type PickContentRelationshipFieldData<
  TRelationship extends
    | prismic.CustomTypeModelFetchCustomTypeLevel1
    | prismic.CustomTypeModelFetchCustomTypeLevel2
    | prismic.CustomTypeModelFetchGroupLevel1
    | prismic.CustomTypeModelFetchGroupLevel2,
  TData extends Record<
    string,
    | prismic.AnyRegularField
    | prismic.GroupField
    | prismic.NestedGroupField
    | prismic.SliceZone
  >,
  TLang extends string,
> =
  // Content relationship fields
  {
    [TSubRelationship in Extract<
      TRelationship["fields"][number],
      prismic.CustomTypeModelFetchContentRelationshipLevel1
    > as TSubRelationship["id"]]: ContentRelationshipFieldWithData<
      TSubRelationship["customtypes"],
      TLang
    >;
  } & // Group
  {
    [TGroup in Extract<
      TRelationship["fields"][number],
      | prismic.CustomTypeModelFetchGroupLevel1
      | prismic.CustomTypeModelFetchGroupLevel2
    > as TGroup["id"]]: TData[TGroup["id"]] extends prismic.GroupField<
      infer TGroupData
    >
      ? prismic.GroupField<
          PickContentRelationshipFieldData<TGroup, TGroupData, TLang>
        >
      : never;
  } & // Other fields
  {
    [TFieldKey in Extract<
      TRelationship["fields"][number],
      string
    >]: TFieldKey extends keyof TData ? TData[TFieldKey] : never;
  };

type ContentRelationshipFieldWithData<
  TCustomType extends
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel1 | string)[]
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel2 | string)[],
  TLang extends string = string,
> = {
  [ID in Exclude<
    TCustomType[number],
    string
  >["id"]]: prismic.ContentRelationshipField<
    ID,
    TLang,
    PickContentRelationshipFieldData<
      Extract<TCustomType[number], { id: ID }>,
      Extract<prismic.Content.AllDocumentTypes, { type: ID }>["data"],
      TLang
    >
  >;
}[Exclude<TCustomType[number], string>["id"]];

type HomePageDocumentDataSlicesSlice =
  | BigtextSlice
  | AlternativeTextSlice
  | CauroselSlice
  | DiveSlice
  | HeroSlice;

/**
 * Content for Home Page documents
 */
interface HomePageDocumentData {
  /**
   * Slice Zone field in *Home Page*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: home_page.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<HomePageDocumentDataSlicesSlice> /**
   * Meta Title field in *Home Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: home_page.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Home Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: home_page.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Home Page*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: home_page.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Home Page document from Prismic
 *
 * - **API ID**: `home_page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomePageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<HomePageDocumentData>,
    "home_page",
    Lang
  >;

export type AllDocumentTypes = HomePageDocument;

/**
 * Item in *AlternativeText → Default → Primary → group text*
 */
export interface AlternativeTextSliceDefaultPrimaryGroupTextItem {
  /**
   * heading field in *AlternativeText → Default → Primary → group text*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: alternative_text.default.primary.group_text[].heading
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  heading: prismic.RichTextField;

  /**
   * body field in *AlternativeText → Default → Primary → group text*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: alternative_text.default.primary.group_text[].body
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  body: prismic.RichTextField;
}

/**
 * Primary content in *AlternativeText → Default → Primary*
 */
export interface AlternativeTextSliceDefaultPrimary {
  /**
   * group text field in *AlternativeText → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: alternative_text.default.primary.group_text[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  group_text: prismic.GroupField<
    Simplify<AlternativeTextSliceDefaultPrimaryGroupTextItem>
  >;
}

/**
 * Default variation for AlternativeText Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type AlternativeTextSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<AlternativeTextSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *AlternativeText*
 */
type AlternativeTextSliceVariation = AlternativeTextSliceDefault;

/**
 * AlternativeText Shared Slice
 *
 * - **API ID**: `alternative_text`
 * - **Description**: AlternativeText
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type AlternativeTextSlice = prismic.SharedSlice<
  "alternative_text",
  AlternativeTextSliceVariation
>;

/**
 * Default variation for Bigtext Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type BigtextSliceDefault = prismic.SharedSliceVariation<
  "default",
  Record<string, never>,
  never
>;

/**
 * Slice variation for *Bigtext*
 */
type BigtextSliceVariation = BigtextSliceDefault;

/**
 * Bigtext Shared Slice
 *
 * - **API ID**: `bigtext`
 * - **Description**: Bigtext
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type BigtextSlice = prismic.SharedSlice<
  "bigtext",
  BigtextSliceVariation
>;

/**
 * Primary content in *Caurosel → Default → Primary*
 */
export interface CauroselSliceDefaultPrimary {
  /**
   * heading field in *Caurosel → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: caurosel.default.primary.heading
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  heading: prismic.RichTextField;

  /**
   * body field in *Caurosel → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: caurosel.default.primary.body
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  body: prismic.KeyTextField;
}

/**
 * Default variation for Caurosel Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CauroselSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<CauroselSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Caurosel*
 */
type CauroselSliceVariation = CauroselSliceDefault;

/**
 * Caurosel Shared Slice
 *
 * - **API ID**: `caurosel`
 * - **Description**: Caurosel
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CauroselSlice = prismic.SharedSlice<
  "caurosel",
  CauroselSliceVariation
>;

/**
 * Primary content in *Dive → Default → Primary*
 */
export interface DiveSliceDefaultPrimary {
  /**
   * sectence field in *Dive → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: dive.default.primary.sectence
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  sectence: prismic.KeyTextField;

  /**
   * flavor field in *Dive → Default → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: blackCherry
   * - **API ID Path**: dive.default.primary.flavor
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  flavor: prismic.SelectField<
    "blackCherry" | "strawberryLemonade" | "watermelon" | "grape" | "lemonLime",
    "filled"
  >;
}

/**
 * Default variation for Dive Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type DiveSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<DiveSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Dive*
 */
type DiveSliceVariation = DiveSliceDefault;

/**
 * Dive Shared Slice
 *
 * - **API ID**: `dive`
 * - **Description**: Dive
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type DiveSlice = prismic.SharedSlice<"dive", DiveSliceVariation>;

/**
 * Primary content in *Hero → Default → Primary*
 */
export interface HeroSliceDefaultPrimary {
  /**
   * heading1 field in *Hero → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.heading1
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  heading1: prismic.RichTextField;

  /**
   * subheading field in *Hero → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.subheading
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  subheading: prismic.RichTextField;

  /**
   * body field in *Hero → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.body
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  body: prismic.RichTextField;

  /**
   * button text field in *Hero → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.button_text
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  button_text: prismic.KeyTextField;

  /**
   * heading2 field in *Hero → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.heading2
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  heading2: prismic.RichTextField;

  /**
   * body2 field in *Hero → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.body2
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  body2: prismic.RichTextField;

  /**
   * cans img field in *Hero → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.cans_img
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  cans_img: prismic.ImageField<never>;
}

/**
 * Default variation for Hero Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeroSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<HeroSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Hero*
 */
type HeroSliceVariation = HeroSliceDefault;

/**
 * Hero Shared Slice
 *
 * - **API ID**: `hero`
 * - **Description**: Hero
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeroSlice = prismic.SharedSlice<"hero", HeroSliceVariation>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      HomePageDocument,
      HomePageDocumentData,
      HomePageDocumentDataSlicesSlice,
      AllDocumentTypes,
      AlternativeTextSlice,
      AlternativeTextSliceDefaultPrimaryGroupTextItem,
      AlternativeTextSliceDefaultPrimary,
      AlternativeTextSliceVariation,
      AlternativeTextSliceDefault,
      BigtextSlice,
      BigtextSliceVariation,
      BigtextSliceDefault,
      CauroselSlice,
      CauroselSliceDefaultPrimary,
      CauroselSliceVariation,
      CauroselSliceDefault,
      DiveSlice,
      DiveSliceDefaultPrimary,
      DiveSliceVariation,
      DiveSliceDefault,
      HeroSlice,
      HeroSliceDefaultPrimary,
      HeroSliceVariation,
      HeroSliceDefault,
    };
  }
}
